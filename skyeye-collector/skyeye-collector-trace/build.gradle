apply plugin: 'org.springframework.boot'
apply plugin: 'application'

repositories {
  mavenLocal()
  maven { url mavenClouderaUrl }
  mavenCentral()
}

dependencies {
  compile project(':skyeye-collector:skyeye-collector-core')

  compile "org.springframework.boot:spring-boot-starter-data-redis:$springBootVersion"
  compile project(':skyeye-data:skyeye-data-jpa')
  compile project(':skyeye-data:skyeye-data-hbase')
  compile "com.alibaba:fastjson:$fastJsonVersion"

  testCompile "org.springframework.boot:spring-boot-starter-test"
}

configurations {
  compile.exclude group: "log4j", module: "log4j"
  compile.exclude group: "org.elasticsearch", module: "elasticsearch"
  compile.exclude group: "org.slf4j", module: "slf4j-log4j12"
}

mainClassName = "com.jthink.skyeye.collector.trace.launcher.Launcher"

buildscript {

  repositories {
    mavenLocal()
    maven { url mavenPublicUrl }
    mavenCentral()
  }

  dependencies {
    classpath("org.springframework.boot:spring-boot-gradle-plugin:$springBootVersion")
    classpath("io.spring.gradle:dependency-management-plugin:$gradlePluginVersion")
  }
}

startScripts {
  doLast {
    unixScript.text = unixScript.text.replaceAll("lib/(.*)\n", "lib/\\*")
  }
}
